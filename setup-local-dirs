#!/bin/sh -x

cd /local/mysql || exit 1

if [ -e /local/mysql/.svn ]; then
	svn upgrade /local/mysql >/dev/null 2>/dev/null
	svn update /local/mysql
fi

if [ -e /local/mysql/.git ]; then
	git pull
fi

ARCH=x86_64
if [ ! -e /lib64 ]; then
	ARCH=i686
fi

PERCONA_DL_BASE=http://www.percona.com/redir/downloads/Percona-Server-5.5/LATEST/binary/linux/$ARCH
PERCONA_WEB_BASE=http://www.percona.com/downloads/Percona-Server-5.5/LATEST/binary/linux/$ARCH/
PERCONA_FILE=`wget -q -O - $PERCONA_WEB_BASE | grep -oP "Percona-Server-[0-9]\.[0-9]\..+?\.tar\.gz" | head -n 1`
PERCONA_DL=$PERCONA_DL_BASE/$PERCONA_FILE

# Until we rewrite to handle new page layouts
#PERCONA_DL=http://www.percona.com/redir/downloads/Percona-Server-5.5/LATEST/release-5.5.34-32.0/591/binary/linux/$ARCH/Percona-Server-5.5.34-rel32.0-591.Linux.$ARCH.tar.gz

if [ "x$1" == "xcluster" ]; then
	touch /local/mysql/cluster
fi

if [ -e "/local/mysql/cluster" ]; then
	PERCONA_DL_BASE=http://www.percona.com/redir/downloads/Percona-XtraDB-Cluster/LATEST/binary/linux/$ARCH
	PERCONA_WEB_BASE=http://www.percona.com/downloads/Percona-XtraDB-Cluster/LATEST/binary/linux/$ARCH/
	PERCONA_FILE=`wget -q -O - $PERCONA_WEB_BASE | grep -oP "Percona-XtraDB-Cluster-[0-9]\.[0-9]\..+?\.tar\.gz" | head -n 1`
	PERCONA_DL=$PERCONA_DL_BASE/$PERCONA_FILE

	# Until we rewrite to handle new page layouts
	#PERCONA_DL=http://www.percona.com/redir/downloads/Percona-XtraDB-Cluster/LATEST/release-5.5.34-23.7.6/565/binary/linux/$ARCH/Percona-XtraDB-Cluster-5.5.34-23.7.6.565.Linux.$ARCH.tar.gz
fi

PERCONA_TAR=`basename $PERCONA_DL`
PERCONA_DIR=`basename $PERCONA_TAR .tar.gz`

echo "tar = $PERCONA_TAR"
echo "dir = $PERCONA_DIR"

if [ ! -d "/local/mysql/tar" ]; then
	mkdir -p /local/mysql/tar
fi

if [ ! -e "/local/mysql/tar/$PERCONA_TAR" ]; then
	wget -O /local/mysql/tar/$PERCONA_TAR $PERCONA_DL
fi

if [ ! -d /local/mysql/$PERCONA_DIR ]; then
cd /local/mysql
gtar -xzf tar/$PERCONA_TAR
fi

mkdir -p /local/mysql/data

mkdir -p /var/lib/mysql
chown -R mysql:mysql /var/lib/mysql

rm -f /local/mysql/server
ln -s /local/mysql/$PERCONA_DIR /local/mysql/server

#
if [ ! -e /local/mysql/mysql.conf ]; then
	cp /local/mysql/mysql-base.conf /local/mysql/mysql.conf
fi

# Replace systemwide client config file
rm -f /etc/my.cnf
cp /local/mysql/client.conf /etc/my.cnf
chown root:root /etc/my.cnf

rm -f /home/local/adm/rc-start/rc.*.mysql
ln -s /local/mysql/rc.mysqld /home/local/adm/rc-start/rc.400.mysql

# If we're running corosync/pacemaker + cluster, don't do startup script
if [ -e /local/mysql/cluster ]; then
  if [ -e /etc/corosync ]; then
    rm -f /home/local/adm/rc-start/rc.*.mysql
  fi
fi

rm -rf /local/mysql-db-backups/bin
mkdir -p /local/mysql-db-backups/data /local/mysql-db-backups/latest

chown -R mysql:mysql /local/mysql

#
# Check for backwards compatability openssl libraries
#
ldd /local/mysql/server/bin/mysqld | grep libcrypto.so.6 > /dev/null
if [ $? == 0 ]; then

	if [ -e /lib64 ]; then

	if [ ! -e /lib64/libcrypto.so.6 ]; then
		if [ -e /lib64/libcrypto.so.10 ]; then
			ln -s libcrypto.so.10 /lib64/libcrypto.so.6
		else
			if [ -e /usr/lib64/libcrypto.so.10 ]; then
				ln -s /usr/lib64/libcrypto.so.10 /lib64/libcrypto.so.6
			else
				echo "Error, need target for libcrypto.so link."
			fi
		fi
	fi
	if [ ! -e /lib64/libssl.so.6 ]; then
		if [ -e /lib64/libssl.so.10 ]; then
			ln -s libssl.so.10 /lib64/libssl.so.6
		else
			if [ -e /usr/lib64/libssl.so.10 ]; then
				ln -s /usr/lib64/libssl.so.10 /lib64/libssl.so.6
			else
				echo "Error, need target for libssl.so link."
			fi
		fi
	fi

	else

	if [ ! -e /lib/libcrypto.so.6 ]; then
		if [ -e /lib/libcrypto.so.10 ]; then
			ln -s libcrypto.so.10 /lib/libcrypto.so.6
		else
			if [ -e /usr/lib/libcrypto.so.10 ]; then
				ln -s /usr/lib/libcrypto.so.10 /lib/libcrypto.so.6
			else
				echo "Error, need target for libcrypto.so link."
			fi
		fi
	fi
	if [ ! -e /lib/libssl.so.6 ]; then
		if [ -e /lib/libssl.so.10 ]; then
			ln -s libssl.so.10 /lib/libssl.so.6
		else
			if [ -e /usr/lib/libssl.so.10 ]; then
				ln -s /usr/lib/libssl.so.10 /lib/libssl.so.6
			else
				echo "Error, need target for libssl.so link."
			fi
		fi
	fi


	fi

	
fi

# Add percona toolkit
PERCONA_TK_DL_BASE=http://www.percona.com/redir/downloads/percona-toolkit/LATEST/RPM/
PERCONA_TK_WEB_BASE=http://www.percona.com/downloads/percona-toolkit/LATEST/RPM/
PERCONA_TK_FILE=`wget -q -O - $PERCONA_TK_WEB_BASE | grep -oP "percona-toolkit-[0-9\.\-]+.noarch.rpm" | head -n 1`
PERCONA_TK_DL=$PERCONA_TK_DL_BASE/$PERCONA_TK_FILE
PERCONA_TK_NAME=`echo $PERCONA_TK_FILE | perl -pi -e s/.rpm//go`

# Fix broken wsrep in 5.5 builds
if [ -e /local/mysql/server/bin/wsrep_sst_rsync ]; then
	perl -pi -e "s/^uid =/#uid =/go" /local/mysql/server/bin/wsrep_sst_rsync
	perl -pi -e "s/^gid =/#gid =/go" /local/mysql/server/bin/wsrep_sst_rsync
fi

# Fix missing client
if [ ! -e /usr/bin/mysql ]; then
	yum -y install mysql
fi

rpm --queryformat "" -q libaio || yum -y install libaio

rpm --queryformat "" -q mytop || yum -y install mytop

rpm --queryformat "" -q $PERCONA_TK_NAME || yum -y localinstall $PERCONA_TK_DL
