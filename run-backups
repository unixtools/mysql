#!/usr/bin/perl

use strict;
use File::Temp qw(tempfile);
use File::Path;

$ENV{PATH} = "/local/mysql/server/bin:" . $ENV{PATH};
my @ts = localtime(time);

my $tstamp = sprintf( "%.4d%.2d%.2d-%.2d%.2d", $ts[5] + 1900, $ts[4] + 1, $ts[3], $ts[2], $ts[1] );

my $base = "/local/mysql-db-backups";

system("/local/mysql/clean-backups");

system( "mkdir", "-p", "$base/latest" );

# DO NOT EVER USE --skip-opt, it throws away important
# stuff like auto_increment flags

my $datadir = "/local/mysql/data";

# Generate a merged config file from several other files

umask(077);
my ( $fh, $tmpfile ) = tempfile();

my @configs = ( "/etc/my.cnf", "/local/mysql/mysql-base.conf", "/local/mysql/mysql.conf", "/root/.my.cnf" );
foreach my $cfile (@configs) {
    next if ( !-e $cfile );
    open( my $in, "<$cfile" );
    while ( defined( my $line = <$in> ) ) {
        print $fh $line;
    }
    close($in);
    print $fh "\n\n";
}
close($fh);

opendir( my $dbdir, $datadir );
while ( my $db = readdir($dbdir) ) {
    next if ( $db eq "." || $db eq ".." );
    next if ( $db eq "lost+found" );
    next if ( $db eq "performance_schema" );
    next if ( !-d "$datadir/$db" );
    next if ( !-e "$datadir/$db/db.opt" && !glob("$datadir/$db/*.frm") );

    # Unsafe, but cuts impact
    my $locks = "";
    if ( $ARGV[0] eq "--skip-lock-tables" ) {
        $locks = "--skip-lock-tables";
    }

    my $cmd = "mysqldump --defaults-file=$tmpfile $locks $db | gzip -v1 -c - > $base/latest/${db}.gz";
    print "+ $cmd\n";
    system($cmd);

    my $dest = sprintf( "%s/data/%s/%.4d/%.2d/%.2d", $base, $db, $ts[5] + 1900, $ts[4] + 1, $ts[3] );

    system( "mkdir", "-p", "$dest" );

    my @cmd = ( "cp", "$base/latest/${db}.gz", "$dest/${tstamp}.gz" );
    print "+ ", join( " ", @cmd ), "\n";
    system(@cmd);
}

unlink($tmpfile);

print "Cleaning backups dir...\n";
system("/local/mysql/clean-backups");

if ( !-e "/local/mysql-db-backups/skip-analyze" ) {
    print "Auto checking tables...\n";
    system("mysqlcheck -A -a");
}
